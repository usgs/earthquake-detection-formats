/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    // code coverage
    id "jacoco"
    //
    id "com.kageiit.jacobo" version "2.1.0"
    // static code analysis
    id "pmd"
    // google java format
    id "com.github.sherter.google-java-format" version "0.9"
    // support publishing to maven repositories
    id 'maven-publish'    
}

sourceCompatibility = '1.11'
targetCompatibility = '1.11'
version = '0.1.0'
group = "gov.usgs"

repositories {
    mavenCentral()
}

configurations {
  codacy
}

dependencies {
    // com.googlecode.json.simple
    implementation "com.googlecode.json-simple:json-simple:1.1.1"

    // Use JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.1")
}

// by default, implementation cannot be referenced, 
// this allows us to use it below
project.configurations.implementation.setCanBeResolved(true)

// set jar entry point
jar {
  duplicatesStrategy = 'include'

  manifest {
    attributes(
      'Class-Path': configurations.implementation.collect { it.name }.join(' '),
      'Main-Class': 'gov.usgs.detectionformats.Version'
    )
  }
  from {
      configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

// always format to google style prior to the build
compileJava.dependsOn 'googleJavaFormat'

// Added Google java style check (shouldn't find anything)
project.tasks.check.dependsOn(verifyGoogleJavaFormat)

// coverage reports
jacoco {
  toolVersion "0.8.7"
}
jacocoTestReport {
  reports {
    // Note I think these will need to be changed 
    // to .required = true when/if we move to 
    // gradle 8
    html.enabled = true
    xml.enabled = true
  }
}
check.dependsOn jacocoTestReport

pmd {
  toolVersion = "6.29.0"
  ruleSets = [
    file("pmd-ruleset.xml")
  ]
}

test {
  useJUnitPlatform()
  filter {
    includeTestsMatching "*Test"
  }
}

// show compile warnings
tasks.withType(JavaCompile) {
  options.compilerArgs.add("-parameters")
  options.encoding = "UTF-8"
  options.setDeprecation(true);
  options.setWarnings(true);
}

// create javadocs
javadoc {
  if(JavaVersion.current() != JavaVersion.VERSION_1_8) {
    options.addBooleanOption('html5', true)
  }
}

// convert jacoco to cobertura
import com.kageiit.jacobo.JacoboTask
tasks.create("jacobo", JacoboTask, {
    it.jacocoReport = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    it.coberturaReport = file("${project.buildDir}/reports/cobertura/cobertura.xml")
    it.srcDirs = sourceSets.main.java.srcDirs
}).dependsOn(jacocoTestReport)
project.tasks.check.dependsOn jacobo

// publish to our maven package repository
// note this will only work from within the pipeline
publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
          // The general NEIC package registry
          url "https://code.usgs.gov/api/v4/projects/8197/packages/maven"
          name "GitLab"
          credentials(HttpHeaderCredentials) {
              name = 'Job-Token'
              value = System.getenv("CI_JOB_TOKEN")
          }
          authentication {
              header(HttpHeaderAuthentication)
          }
        }
    }
}